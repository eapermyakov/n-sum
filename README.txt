Структура архива:
- sql – папка с SQL скриптами для развёртывания БД для приложения.
- src – папка  c исходными кодами приложения.
- pom.xml – файл описания приложения для сборщика maven.
- run.bat – файл для запуска приложения.
- Задание.doc - файл с текстом задания.


Требования:
- PostgreSQL 9.2 или выше.
- JDK7 или выше.


Инструкция по запуску: 
- Подключится к СУБД PostgreSQL и выполнить скрипт sql\db.sql.
- Скорректировать параметры подключения к СУБД в файле src\main\java\...\Main.java.
- Собрать приложение используя сборщик maven.
- Скорректировать число N в файле run.bat и запустить его.


Особенности реализации:
Генерация последовательности от 1 до N выполняется на стороне базы данных с помощью обобщенного табличного выраженя с рекурсивным запросом:
	WITH RECURSIVE temp(num) AS (VALUES (1)
		UNION ALL SELECT num + 1 FROM temp WHERE num < ?)
	INSERT INTO test (field)
		SELECT num as field FROM temp
Для генерации и чтения XML файла была выполнена реализация с использованием 2-х библиотек: jdom и JAXB. Лучшей результат по скорости, для этого приложения, дала библиотека JAXB. 
Но для работы JAXB потребовалось создать 4 класса (2 класса для записи в файл и 2 для чтения трансформированного файла).

Результаты работы приложения выводятся в консоль и файлы:
- write-[имя бибилиотеки].xml – файл сгенерированный на основе данных из БД;
- transformed-write-[имя бибилиотеки].xml - файл созданные в результате XSLT трансформации.
